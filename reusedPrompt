I can get console.logs from background.js but not from popup.js. Here's all my relevant code:

manifest.json:

{
    "manifest_version": 3,
    "name": "Spoilers!",
    "description": "Block spoilers on YouTube.",
    "version": "1.0",
    "permissions": ["activeTab", "storage"],
    "action": {
      "default_popup": "popup.html",
      "default_icon": {
        "16": "icons/icon16.png",
        "48": "icons/icon48.png",
        "128": "icons/icon128.png"
      }
    },
    "icons": {
      "16": "icons/icon16.png",
      "32": "icons/icon32.png",
      "48": "icons/icon48.png",
      "128": "icons/icon128.png"
    },
    "background": {
      "service_worker": "background.js"
    }
  }  


background.js:

console.log("I'm running!");


popup.html:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="popup.css">
    <title>Spoiler Blocker</title>
</head>
<body>
    <button id="powerButton">ON/OFF</button>
    <div id="trackedMedia" class="collapsible">
        <h2>My Tracked Media</h2>
        <div class="content">
            <ul id="trackedMediaList"></ul>
        </div>
        <button id="clearAll">Clear All</button>
    </div>
    <div id="addMedia" class="collapsible">
        <h2>Add Media</h2>
        <div class="content"></div>
    </div>
    <div id="flagURL" class="collapsible">
        <h2>Flag URL</h2>
        <div class="content"></div>
    </div>
    <script src="popup.js"></script>
</body>
</html>


popup.js:
document.addEventListener('DOMContentLoaded', () => {
    console.log('DOM loaded!'); // DEBUG
    const trackedMediaList = document.getElementById('trackedMediaList');
    const clearAllButton = document.getElementById('clearAll');
  
    // Function to display tracked media
    function displayTrackedMedia() {
		chrome.storage.local.get(['trackedMedia'], (result) => {
			const mediaList = result.trackedMedia || [];
			trackedMediaList.innerHTML = '';
			mediaList.forEach((media, index) => {
				const listItem = document.createElement('li');
				listItem.textContent = media;
				const removeButton = document.createElement('button');
				removeButton.textContent = 'Remove';
				removeButton.addEventListener('click', () => removeTrackedMedia(index));
				listItem.appendChild(removeButton);
				trackedMediaList.appendChild(listItem);
			});
		});
    }
  
    // Function to remove tracked media by index
    function removeTrackedMedia(index) {
		chrome.storage.local.get(['trackedMedia'], (result) => {
			const mediaList = result.trackedMedia || [];
			mediaList.splice(index, 1);
			chrome.storage.local.set({ trackedMedia: mediaList }, () => {
			displayTrackedMedia();
			});
		});
    }
  
    // Clear all tracked media
    clearAllButton.addEventListener('click', () => {
		chrome.storage.local.set({ trackedMedia: [] }, () => {
			displayTrackedMedia();
		});
    });
  
    // Initialize tracked media if empty
    chrome.storage.local.get(['trackedMedia'], (result) => {
        console.log('Initial get result:', result); // DEBUG
            if (!result.trackedMedia || result.trackedMedia.length === 0) {
                console.log('Setting Example Media'); // DEBUG
                chrome.storage.local.set({ trackedMedia: ["Example Media"] }, () => {
					console.log('Example Media Set'); // DEBUG
                    displayTrackedMedia();
            });
        } else {
			console.log('Displaying Existing Media'); // DEBUG
            displayTrackedMedia();
        }
    });
});

Use this to fix the issue of not being able to see console.logs from popup.js.